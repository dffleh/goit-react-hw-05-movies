{"version":3,"file":"static/js/784.fb40a168.chunk.js","mappings":"+SACO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,8FAEH,yFAFG,SAGcC,EAAAA,EAAAA,IADjB,0FAFG,cAGCC,EAHD,gBAIcA,EAAKC,KAJnB,cAICA,EAJD,gBAKkBA,EAAKC,QALvB,cAKCC,EALD,yBAOEA,GAPF,mEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,oFACCC,EADD,kHACkHD,EADlH,wCAEcN,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAME,CAAEA,SAAAA,EAAUF,KAAAA,IANd,mEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCF,EADD,6CAC6CE,EAD7C,qEAEcT,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,yBAKEA,GALF,kEAQA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,oFACCF,EADD,6CAC6CE,EAD7C,oFAEcT,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAMEA,GANF,mEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,oFACCL,EADD,6CAC6CK,EAD7C,6EAEcZ,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKW,KAJvB,cAICC,EAJD,yBAKEA,GALF,mE,6GClCMC,EAAWC,EAAAA,GAAAA,GAAH,2NAYRC,EAASD,EAAAA,GAAAA,IAAH,kFAMNE,EAAQF,EAAAA,GAAAA,GAAH,gKASLG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,mF,kBCzBJK,EAAW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,MAAOX,EAAc,EAAdA,QACtCY,GAAWC,EAAAA,EAAAA,MACXC,EAAa,0CAAsCJ,GACzD,OACE,SAACP,EAAD,WACE,UAACI,EAAD,CAAMQ,GAAE,kBAAaf,GAAWgB,MAAO,CAAEC,KAAML,GAA/C,WACE,SAACP,EAAD,CACEa,IAAKR,EAAaI,EAAgBK,EAClCC,IAAKT,EACLU,OAAO,SAET,SAACf,EAAD,UAAQK,QAIf,C,+HClBYW,E,OAAUlB,GAAAA,IAAH,2G,SCCPmB,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,SAACF,EAAD,WACE,uBAAIE,KAGT,E,SC2ED,EAtEe,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxC,EAAcuC,EAAaE,IAAI,gBAMrCC,EAAAA,EAAAA,YAAU,WACH1C,IACLqC,EAAU,YAEVtC,EAAAA,EAAAA,IAAkBC,GACf2C,MAAK,SAAAC,GACyB,IAAzBA,EAAEhD,KAAKiD,eAAqBR,EAAU,cAC1CF,EAASS,EAAE9C,UACXuC,EAAU,WACX,IACAS,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAEjB,QAAlB,IACX,GAAE,CAAC9B,IAQJ,OACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAMkD,SARS,SAAAH,GACjBA,EAAEI,iBACmB,KAAjBnB,EAAMoB,SACVZ,EAAgB,CAAExC,YAAagC,IAC/BC,EAAS,IACV,EAGG,WACE,4BACE,SAAC,KAAD,CACEoB,MAAOrB,EACPsB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,QAjCW,SAAAX,GACnBd,EAASc,EAAEY,OAAON,MAAMO,cACzB,OAkCK,SAAC,KAAD,CAASN,KAAK,SAAd,UACE,SAAC,KAAD,0BAGQ,aAAXlB,GAAyBF,EAAM2B,OAAS,IACvC,SAAC,KAAD,UACG3B,EAAM4B,KAAI,SAAAC,GACT,IAAQ5D,EAAiC4D,EAAjC5D,GAAI6D,EAA6BD,EAA7BC,YAAa/C,EAAgB8C,EAAhB9C,MAAOgD,EAASF,EAATE,KAChC,OACE,SAAClD,EAAA,EAAD,CAEEC,WAAYgD,EACZ/C,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAASgD,EAChB3D,QAASH,GAHJA,EAMV,MAGO,eAAXiC,IACC,SAACP,EAAD,CACEC,QAAO,iDAA4C9B,EAA5C,SAKhB,C,iNCjFYkE,EAAYxD,EAAAA,GAAAA,IAAH,oFAMTyD,EAAOzD,EAAAA,GAAAA,GAAH,+IASJ0D,EAAO1D,EAAAA,GAAAA,KAAH,gQAYJ2D,EAAU3D,EAAAA,GAAAA,OAAH,kVAiBP4D,EAAY5D,EAAAA,GAAAA,MAAH,4PAeT6D,EAAe7D,EAAAA,GAAAA,KAAH,4M","sources":["API/Fetch.js","components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","components/SearchError/SearchError.styled.js","components/SearchError/SearchError.jsx","components/Movies/Movies.jsx","components/Movies/Movies.styled.js"],"sourcesContent":["import axios from 'axios';\nexport async function fetchPopularFilms() {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=97c2f5e78e10e2e692a512d9b4d0312c';\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmsByQuery(searchQuery) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return { filmsArr, data };\n}\n\nexport async function fetchFilmDetails(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n\n  return data;\n}\n\nexport async function fetchFilmReviews(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US&page=1`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmCast(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmCast = await data.cast;\n  return filmCast;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListItem = styled.li`\n  border-radius: 5px;\n  list-style: none;\n  width: 340px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transform: scale(1.025);\n  }\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  border-radius: 6px;\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  margin-top: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  text-align: start;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  width: 100%;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Poster, Link, ListItem, Title } from './FilmCard.styled';\nimport noPoster from '../../image/noPoster.png';\n\nexport const FilmCard = ({ posterPath, title, movieId }) => {\n  const location = useLocation();\n  const filmPosterSrc = `https://image.tmdb.org/t/p/w500/${posterPath}`;\n  return (\n    <ListItem>\n      <Link to={`/movies/${movieId}`} state={{ from: location }}>\n        <Poster\n          src={posterPath ? filmPosterSrc : noPoster}\n          alt={title}\n          height=\"510\"\n        />\n        <Title>{title}</Title>\n      </Link>\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrWrap = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import React from 'react';\nimport { ErrWrap } from './SearchError.styled';\n\nexport const SearchError = ({ message }) => {\n  return (\n    <ErrWrap>\n      <p>{message}</p>\n    </ErrWrap>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchFilmsByQuery } from 'API/Fetch';\nimport { FilmCard } from 'components/FilmCard/FilmCard';\nimport { SearchError } from 'components/SearchError/SearchError';\nimport {\n  Container,\n  Form,\n  FormBtn,\n  FormBtnLabel,\n  FormInput,\n  List,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  const onInputValue = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setStatus('pending');\n\n    fetchFilmsByQuery(searchQuery)\n      .then(r => {\n        if (r.data.total_results === 0) setStatus('no-results');\n        setFilms(r.filmsArr);\n        setStatus('resolved');\n      })\n      .catch(e => console.log(e.message));\n  }, [searchQuery]);\n\n  const formSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return;\n    setSearchParams({ searchQuery: query });\n    setQuery('');\n  };\n  return (\n    <Container>\n      <Form onSubmit={formSubmit}>\n        <label>\n          <FormInput\n            value={query}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onInput={onInputValue}\n          />\n        </label>\n        <FormBtn type=\"submit\">\n          <FormBtnLabel>Search</FormBtnLabel>\n        </FormBtn>\n      </Form>\n      {status === 'resolved' && films.length > 0 && (\n        <List>\n          {films.map(film => {\n            const { id, poster_path, title, name } = film;\n            return (\n              <FilmCard\n                key={id}\n                posterPath={poster_path}\n                title={title ?? name}\n                movieId={id}\n              />\n            );\n          })}\n        </List>\n      )}\n      {status === 'no-results' && (\n        <SearchError\n          message={`Sorry, we did not find any movies for \"${searchQuery}\"`}\n        />\n      )}\n    </Container>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: 120px;\n  width: 1440px;\n  margin: 0 auto;\n`;\n\nexport const List = styled.ul`\n  padding: 30px 0 60px;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin: 0;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid black;\n`;\nexport const FormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 550px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n"],"names":["fetchPopularFilms","axios","resp","data","results","filmsArr","fetchFilmsByQuery","searchQuery","url","fetchFilmDetails","id","fetchFilmReviews","fetchFilmCast","movieId","cast","filmCast","ListItem","styled","Poster","Title","Link","NavLink","FilmCard","posterPath","title","location","useLocation","filmPosterSrc","to","state","from","src","noPoster","alt","height","ErrWrap","SearchError","message","useState","query","setQuery","films","setFilms","status","setStatus","useSearchParams","searchParams","setSearchParams","get","useEffect","then","r","total_results","catch","e","console","log","onSubmit","preventDefault","trim","value","type","autoComplete","autoFocus","placeholder","onInput","target","toLowerCase","length","map","film","poster_path","name","Container","List","Form","FormBtn","FormInput","FormBtnLabel"],"sourceRoot":""}