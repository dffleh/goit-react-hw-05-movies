{"version":3,"file":"static/js/779.9efff74d.chunk.js","mappings":"+SACO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,8FAEH,yFAFG,SAGcC,EAAAA,EAAAA,IADjB,0FAFG,cAGCC,EAHD,gBAIcA,EAAKC,KAJnB,cAICA,EAJD,gBAKkBA,EAAKC,QALvB,cAKCC,EALD,yBAOEA,GAPF,mEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,oFACCC,EADD,kHACkHD,EADlH,wCAEcN,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAME,CAAEA,SAAAA,EAAUF,KAAAA,IANd,mEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCF,EADD,6CAC6CE,EAD7C,qEAEcT,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,yBAKEA,GALF,kEAQA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,oFACCF,EADD,6CAC6CE,EAD7C,oFAEcT,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKC,QAJvB,cAICC,EAJD,yBAMEA,GANF,mEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,oFACCL,EADD,6CAC6CK,EAD7C,6EAEcZ,EAAAA,EAAAA,IAAUO,GAFxB,cAECN,EAFD,gBAGcA,EAAKC,KAHnB,cAGCA,EAHD,gBAIkBA,EAAKW,KAJvB,cAICC,EAJD,yBAKEA,GALF,mE,8GClCMC,EAAOC,EAAAA,GAAAA,IAAH,oFAMJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,ia,sHCPPG,E,OAASH,GAAAA,EAAH,4C,gBCmCnB,EA/BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QASR,OAPAY,EAAAA,EAAAA,YAAU,WACHZ,IACLF,EAAAA,EAAAA,IAAiBE,GACda,KAAKH,GACLI,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAEG,QAAlB,GACX,GAAE,CAAClB,KAGF,SAAC,IAAD,UACGS,EAAQU,OAAS,GAChB,wBACGV,EAAQW,KAAI,SAAAC,GACX,IAAQxB,EAAwBwB,EAAxBxB,GAAIyB,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QACpB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFG1B,EAKZ,OAGH,SAACU,EAAD,wDAIP,C","sources":["API/Fetch.js","components/MovieDetails/MovieDetails.styled.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nexport async function fetchPopularFilms() {\n  const url =\n    'https://api.themoviedb.org/3/trending/all/day?api_key=97c2f5e78e10e2e692a512d9b4d0312c';\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmsByQuery(searchQuery) {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return { filmsArr, data };\n}\n\nexport async function fetchFilmDetails(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n\n  return data;\n}\n\nexport async function fetchFilmReviews(id) {\n  const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US&page=1`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmsArr = await data.results;\n\n  return filmsArr;\n}\n\nexport async function fetchFilmCast(movieId) {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=97c2f5e78e10e2e692a512d9b4d0312c&language=en-US`;\n  const resp = await axios.get(url);\n  const data = await resp.data;\n  const filmCast = await data.cast;\n  return filmCast;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  width: 1440px;\n  margin: 0 auto 30px;\n  display: flex;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  box-sizing: border-box;\n  width: 150px;\n  height: 50px;\n  margin-right: 20px;\n  font-size: 20px;\n  padding: 10px 30px;\n  text-align: center;\n  background-color: #fff;\n  font-weight: 500;\n  line-height: 30px;\n  border: 1px solid black;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    background-color: orange;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Inform = styled.p`\n  font-size: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmReviews } from 'API/Fetch';\nimport { Inform } from './Reviews.styled';\nimport { Wrap } from 'components/MovieDetails/MovieDetails.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchFilmReviews(movieId)\n      .then(setReviews)\n      .catch(e => console.log(e.message));\n  }, [movieId]);\n\n  return (\n    <Wrap>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            const { id, author, content } = review;\n            return (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <Inform>We don't have any reviews for this movie</Inform>\n      )}\n    </Wrap>\n  );\n};\nexport default Reviews;\n"],"names":["fetchPopularFilms","axios","resp","data","results","filmsArr","fetchFilmsByQuery","searchQuery","url","fetchFilmDetails","id","fetchFilmReviews","fetchFilmCast","movieId","cast","filmCast","Wrap","styled","LinkBtn","NavLink","Inform","useState","reviews","setReviews","useParams","useEffect","then","catch","e","console","log","message","length","map","review","author","content"],"sourceRoot":""}